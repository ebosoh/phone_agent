\"import os\"  
\"from dotenv import load_dotenv\"  
\"from langchain_community.document_loaders import DirectoryLoader, TextLoader, PyPDFLoader\"  
\"from langchain.text_splitter import RecursiveCharacterTextSplitter\"  
\"from langchain_community.embeddings import HuggingFaceEmbeddings\"  
\"from langchain_community.vectorstores import Chroma\"  
\"\"  
\"load_dotenv()\"  
\"\"  
\"KNOWLEDGE_BASE_DIR = \\\"knowledge_base\\\"\"  
\"DB_DIR = \\\"db\\\"\"  
\"\"  
\"def main():\"  
\"    print(\\\"Starting data ingestion...\\\")\"  
\"    loader = DirectoryLoader(\"  
\"        KNOWLEDGE_BASE_DIR,\"  
\"        glob=\\\"**/*\\\",\"  
\"        use_multithreading=True,\"  
\"        show_progress=True,\"  
\"        loader_map={\"  
\"            \\\".txt\\\": TextLoader,\"  
\"            \\\".md\\\": TextLoader,\"  
\"            \\\".pdf\\\": PyPDFLoader,\"  
\"        },\"  
\"    )\"  
\"    documents = loader.load()\"  
\"    if not documents:\"  
\"        print(\\\"No documents found in the knowledge base directory.\\\")\"  
\"        return\"  
\"    print(f\\\"Loaded {len(documents)} documents.\\\")\"  
\"    text_splitter = RecursiveCharacterTextSplitter(chunk_size=1000, chunk_overlap=200)\"  
\"    texts = text_splitter.split_documents(documents)\"  
\"    print(f\\\"Split documents into {len(texts)} chunks.\\\")\"  
\"    print(\\\"Initializing embedding model (mxbai-embed-large)...\\\")\"  
\"    embedding_model = HuggingFaceEmbeddings(\"  
\"        model_name=\\\"mixedbread-ai/mxbai-embed-large-v1\\\",\"  
\"        model_kwargs={'device': 'cpu'}\"  
\"    )\"  
\"    print(f\\\"Creating and persisting vector store in '{DB_DIR}'...\\\")\"  
\"    vectordb = Chroma.from_documents(\"  
\"        documents=texts,\"  
\"        embedding=embedding_model,\"  
\"        persist_directory=DB_DIR\"  
\"    )\"  
\"    vectordb.persist()\"  
\"    print(\\\"Data ingestion complete.\\\")\"  
\"    print(f\\\"Vector store created with {vectordb._collection.count()} entries.\\\")\"  
\"\"  
\"if __name__ == \\\"__main__\\\":\"  
\"    main()\" 
